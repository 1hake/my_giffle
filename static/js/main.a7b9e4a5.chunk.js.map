{"version":3,"sources":["components/categories/Categories.jsx","App.js","reportWebVitals.js","index.js"],"names":["Categories","isOpen","useState","categories","state","setState","name","permalink","useEffect","length","a","Axios","get","data","arraycategories","handleSelectCategory","value","id","className","style","position","zIndex","backgroundColor","width","display","justifyContent","borderBottomRightRadius","borderBottomLeftRadius","flexWrap","transition","map","category","i","margin","padding","borderRadius","height","fontSize","alignItems","fontWeight","onClick","nom","generateList","max","list","push","Math","floor","random","console","log","Simple","setList","href","rel","url","index","preventSwipe","onSwipe","dir","direction","nameToDelete","swiped","onCardLeftScreen","backgroundImage","bottom","textAlign","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a7b9e4a5.chunk.js","sourcesContent":["import Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"../../App.css\";\n\nconst Categories = ({ isOpen }) => {\n  const [state, setState] = useState({\n    categories: [],\n  });\n  const [selectedCategorie, setSelectedCategorie] = useState({\n    name: \"\",\n    permalink: \"\",\n  });\n\n  useEffect(() => {\n    if (state.categories?.length === 0) {\n      (async () => {\n        const { data } = await Axios.get(\n          `https://api.gifsauce.com/api/categories/list`\n        );\n        if (data) {\n          setState({\n            categories: data.arraycategories,\n          });\n        }\n      })();\n    }\n  }, [state]);\n\n  const handleSelectCategory = async (value) => {\n    const { data } = await Axios.get(\n      `https://api.gifsauce.com/api/gifs/list?q=${value}`\n    );\n  };\n  return (\n    <div\n      id={`left-panel`}\n      className={`${isOpen ? \"show\" : \"\"}`}\n      style={{\n        position: \"absolute\",\n        zIndex: -2,\n        backgroundColor: \"#717170\",\n        width: \"100vw\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        borderBottomRightRadius: \"25px\",\n        borderBottomLeftRadius: \"25px\",\n        flexWrap: \"wrap\",\n        transition: \"0.5s ease-in-out\",\n      }}\n    >\n      {state?.categories?.map((category, i) => (\n        <div\n          style={{\n            margin: \"5px\",\n            padding: \"8px\",\n            borderRadius: \"25px\",\n            height: \"30px\",\n            fontSize: \"0.8em\",\n            backgroundColor: \"white\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            fontWeight: \"bold\",\n          }}\n          key={i}\n          onClick={() => handleSelectCategory(category.permalink)}\n        >\n          {category?.nom}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Categories;\n","import React, { useState } from \"react\";\n// import TinderCard from '../react-tinder-card/index'\nimport TinderCard from \"react-tinder-card\";\nimport \"./App.css\";\nimport ButtonCategories from \"./components/categories/ButtonCategories\";\nimport Categories from \"./components/categories/Categories\";\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nconst generateList = (length) => {\n  let list = [];\n  for (let i = 0; i < length; i++) {\n    list.push(`https://cdn.porngifs.com/img/${getRandomInt(5000)}`);\n  }\n  console.log(\"ðŸš€ ~ file: App.js ~ line 12 ~ generateList ~ list\", list);\n  return list;\n};\n\nfunction Simple() {\n  const [list, setList] = useState(generateList(5));\n  const [lastDirection, setLastDirection] = useState();\n  const [state, setState] = useState({\n    isOpen: false,\n  });\n\n  const handleOpen = () => {\n    setState({\n      ...state,\n      isOpen: !state.isOpen,\n    });\n  };\n  const swiped = (direction, nameToDelete, index) => {\n    console.log(\"ðŸš€ ~ file: App.js ~ line 36 ~ swiped ~ index\", index);\n    if (index === 0) {\n      setList(generateList(10));\n    }\n  };\n\n  const outOfFrame = (url) => {};\n\n  return (\n    <div>\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Damion&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Alatsi&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <div className=\"cardContainer\">\n        {list ? (\n          list.map((url, index) => (\n            <TinderCard\n              className=\"swipe\"\n              key={index + url}\n              preventSwipe={[\"up\", \"down\"]}\n              onSwipe={(dir) => swiped(dir, url, index)}\n              onCardLeftScreen={() => outOfFrame(url)}\n            >\n              <div\n                style={{ backgroundImage: \"url(\" + url + \")\" }}\n                className=\"card\"\n              ></div>\n            </TinderCard>\n          ))\n        ) : (\n          <h1>hello</h1>\n        )}\n        <button\n          style={{\n            zIndex: 0,\n            bottom: 0,\n            position: \"absolute\",\n            textAlign: \"center\",\n          }}\n          onClick={handleOpen}\n        >\n          OPEN CATEGORIES\n        </button>\n      </div>\n      {/* <ButtonCategories setList={setList} list={list} /> */}\n      <Categories isOpen={state.isOpen} />\n    </div>\n  );\n}\n\nexport default Simple;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}