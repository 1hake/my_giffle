{"version":3,"sources":["components/categories/Categories.jsx","components/categories/ButtonCategories.jsx","App.js","reportWebVitals.js","index.js"],"names":["Categories","isOpen","list","setList","useState","categories","state","setState","name","permalink","useEffect","length","a","Axios","get","data","arraycategories","handleSelectCategory","value","require","search","gifs","then","console","log","url","method","withCredentials","headers","style","position","height","zIndex","top","backgroundColor","width","left","display","justifyContent","flexDirection","map","category","i","onClick","nom","ButtonCategories","bottom","textAlign","generateList","max","push","Math","floor","random","Simple","href","rel","className","index","preventSwipe","onSwipe","dir","direction","nameToDelete","swiped","onCardLeftScreen","backgroundImage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60d58ed7.chunk.js","sourcesContent":["import Axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nconst Categories = ({\n    isOpen,\n    list,\n    setList\n}) => {\n    const [state, setState] = useState({\n        categories: []\n    });\n    const [selectedCategorie, setSelectedCategorie] = useState({\n        name: '',\n        permalink: ''\n    });\n\n    useEffect(() => {\n        if (state.categories?.length === 0) {\n            (async () => {\n                const { data } = await Axios.get(`https://api.gifsauce.com/api/categories/list`);\n                if (data) {\n                    setState({\n                        categories: data.arraycategories\n                    })\n                }\n            })();\n        }\n    }, [state]);\n\n    const handleSelectCategory = async (value) => {\n        const Pornsearch = require('pornsearch').search('ass');\n\n        Pornsearch.gifs()\n            .then(gifs => console.log(gifs));\n\n\n        const { data } = await Axios({\n            url: 'http://www.pornhub.com/gifs/search?search=ass&page=1',\n            method: 'GET',\n            withCredentials: false,\n            headers: {\n                'Access-Control-Allow-Origin': '*'\n            }\n        });\n        console.log(data)\n        \n    };\n\n    if (!isOpen) return null;\n    else return (\n        <div style={{\n            position: 'fixed',\n            height: '100vh',\n            zIndex: 1,\n            top: 0,\n            backgroundColor: 'blue',\n            width: '100vw',\n            left: 0,\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column'\n        }}>\n            {state?.categories?.map((category, i) => (\n                <div key={i} onClick={() => handleSelectCategory(category.permalink)} >{category?.nom}</div>\n            ))}\n        </div >\n    );\n};\n\nexport default Categories;","import React, { useState } from 'react';\nimport Categories from './Categories';\n\nconst ButtonCategories = ({setList, list}) => {\n    const [state, setState] = useState({\n        isOpen: false\n    });\n\n    const handleOpen = () => {\n        setState({\n            ...state,\n            isOpen: !state.isOpen\n        });\n    };\n\n    return (\n        <div style={{\n            position: 'absolute',\n            top: 0,\n            height: '100vh',\n            width: '100vw',\n            left: 0\n        }}>\n            <button style={{\n                zIndex: state.isOpen ? 2 : 1,\n                bottom: 0,\n                position: \"absolute\",\n                textAlign: \"center\"\n            }} onClick={handleOpen}>\n                OPEN CATEGORIES\n        </button>\n            <Categories isOpen={state.isOpen} setList={setList} list={list} />\n        </div>\n    );\n};\n\nexport default ButtonCategories;","import React, { useState } from \"react\";\n// import TinderCard from '../react-tinder-card/index'\nimport TinderCard from \"react-tinder-card\";\nimport \"./App.css\";\nimport ButtonCategories from \"./components/categories/ButtonCategories\";\n\nfunction getRandomInt(max) {\n  return Math.floor(Math.random() * Math.floor(max));\n}\n\nconst generateList = (length) => {\n  let list = [];\n  for (let i = 0; i < length; i++) {\n    list.push(`https://cdn.porngifs.com/img/${getRandomInt(5000)}`);\n  }\n  console.log(\"ðŸš€ ~ file: App.js ~ line 12 ~ generateList ~ list\", list);\n  return list;\n};\n\nfunction Simple() {\n  const [list, setList] = useState(generateList(5));\n  const [lastDirection, setLastDirection] = useState();\n\n  const swiped = (direction, nameToDelete, index) => {\n    console.log(\"ðŸš€ ~ file: App.js ~ line 36 ~ swiped ~ index\", index);\n    if (index === 0) {\n      setList(generateList(10));\n    }\n  };\n\n  const outOfFrame = (url) => {};\n\n  return (\n    <div>\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Damion&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <link\n        href=\"https://fonts.googleapis.com/css?family=Alatsi&display=swap\"\n        rel=\"stylesheet\"\n      />\n      <div className=\"cardContainer\">\n        {list ? (\n          list.map((url, index) => (\n            <TinderCard\n              className=\"swipe\"\n              key={index + url}\n              preventSwipe={[\"up\", \"down\"]}\n              onSwipe={(dir) => swiped(dir, url, index)}\n              onCardLeftScreen={() => outOfFrame(url)}\n            >\n              <div\n                style={{ backgroundImage: \"url(\" + url + \")\" }}\n                className=\"card\"\n              ></div>\n            </TinderCard>\n          ))\n        ) : (\n          <h1>hello</h1>\n        )}\n      </div>\n      <ButtonCategories setList={setList} list={list}/>\n    </div>\n  );\n}\n\nexport default Simple;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}